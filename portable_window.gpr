with "config/portable_window_config.gpr";
project Portable_Window is

   for Languages use ("ada", "c");

   Sources := ("src", "config");
   Link_Switches := ("");
   
   case portable_window_config.Alire_Host_Os is
      when "windows" => 
         Sources := Sources & ("src/win32");
         Link_Switches := Link_Switches & ("-lgdi32", "-llargeint");
      when "linux"   => 
         Sources := Sources & ("src/x11");
         Link_Switches := Link_Switches &  ("-L/usr/lib/X11", "-lX11", "-lXext");
      when "macos"   =>
         Sources := Sources & ("src/x11");
         Link_Switches := Link_Switches &  ("-lX11", "-L/usr/X11/lib");
   end case;
   
   for Library_Name use "Portable_Window";
   for Library_Dir use "lib";
   for Library_Kind use "static"; -- or "dynamic" for a shared library

   for Source_Dirs use Sources;
   for Object_Dir use "obj/" & Portable_Window_Config.Build_Profile;
   for Create_Missing_Dirs use "True";
   for Exec_Dir use "bin";
   -- for Main use ("portable_window.adb");

   package Compiler is
      for Default_Switches ("Ada") use Portable_Window_Config.Ada_Compiler_Switches & ("-gnat2022", "-gnatX");
   end Compiler;

   package Linker is
      for switches ("ada") use Link_Switches;
      for switches ("c") use Link_Switches;
   end Linker;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

   package Install is
      for Artifacts (".") use ("share");
   end Install;

end Portable_Window;